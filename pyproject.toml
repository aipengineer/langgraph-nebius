[project]
name = "deepdive-langgraph"
version = "0.1.0"
description = "Deep dive for learning LangGraph"
requires-python = ">=3.13"
dependencies = [
    "langgraph>=0.2.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "langchain-community>=0.0.1",
    "pydantic>=2.6.1",
    "typing-extensions>=4.9.0",
    "numexpr",
    "pydantic-settings",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-socket>=0.7.0",  # For disabling network in tests
    "ruff>=0.1.0",
    "types-requests>=2.31.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "-v"
markers = [
    "real_api: marks tests that make real API calls (deselect with '-m \"not real_api\"')",
]
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "PGH", # pygrep-hooks
    "RUF", # ruff-specific rules
    "UP",  # pyupgrade
    "TID", # flake8-tidy-imports
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"